//
// CAFAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class CAFAPI { 
    /**
     * enum for parameter acceptEncoding
     */
    public enum AcceptEncoding_getConfirmationOfFunds: String { 
        case gzip = "gzip"
        case deflate = "deflate"
    }

    /**
     * enum for parameter acceptCharset
     */
    public enum AcceptCharset_getConfirmationOfFunds: String { 
        case _8 = "utf-8"
    }
    /**
     Confirmation of the availability of funds
     - parameter body: (body) Object with amount to check      - parameter acceptEncoding: (header) Gzip, deflate      - parameter acceptLanguage: (header) Prefered language of response      - parameter acceptCharset: (header) UTF-8      - parameter X_JWS_SIGNATURE: (header) Detached JWS signature of the body of the payload 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getConfirmationOfFunds(body: ConfirmationOfFundsRequest, acceptEncoding: AcceptEncoding_getConfirmationOfFunds, acceptLanguage: String, acceptCharset: AcceptCharset_getConfirmationOfFunds, X_JWS_SIGNATURE: String, completion: @escaping ((_ data: ConfirmationOfFundsResponse?,_ error: Error?) -> Void)) {
        getConfirmationOfFundsWithRequestBuilder(body: body, acceptEncoding: acceptEncoding, acceptLanguage: acceptLanguage, acceptCharset: acceptCharset, X_JWS_SIGNATURE: X_JWS_SIGNATURE).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Confirmation of the availability of funds
     - POST /v1.0/confirmation/v1.0/getConfirmationOfFunds
     - Confirming the availability on the payers account of the amount necessary to execute the payment transaction, as defined in Art. 65 PSD2.
     - OAuth:
       - type: oauth2
       - name: xs2a_auth
     - responseHeaders: [Content-Encoding(String), X-JWS-SIGNATURE(String)]
     - responseHeaders: [Content-Encoding(String), X-JWS-SIGNATURE(String)]
     - parameter body: (body) Object with amount to check      - parameter acceptEncoding: (header) Gzip, deflate      - parameter acceptLanguage: (header) Prefered language of response      - parameter acceptCharset: (header) UTF-8      - parameter X_JWS_SIGNATURE: (header) Detached JWS signature of the body of the payload 

     - returns: RequestBuilder<ConfirmationOfFundsResponse> 
     */
    open class func getConfirmationOfFundsWithRequestBuilder(body: ConfirmationOfFundsRequest, acceptEncoding: AcceptEncoding_getConfirmationOfFunds, acceptLanguage: String, acceptCharset: AcceptCharset_getConfirmationOfFunds, X_JWS_SIGNATURE: String) -> RequestBuilder<ConfirmationOfFundsResponse> {
        let path = "/v1.0/confirmation/v1.0/getConfirmationOfFunds"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
                        "Accept-Encoding": acceptEncoding.rawValue,
                        "Accept-Language": acceptLanguage,
                        "Accept-Charset": acceptCharset.rawValue,
                        "X-JWS-SIGNATURE": X_JWS_SIGNATURE
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<ConfirmationOfFundsResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: , headers: headerParameters)
    }

}
